{"ast":null,"code":"var _jsxFileName = \"/Users/thapasya/home/practice/testing/snake-game-react/frontend/src/components/UserPortal.js\";\nimport React, { Component } from 'react';\nimport * as config from '../settings';\n\nclass UserPortal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const input = e.target;\n      let _user = this.state.user;\n      _user[input.name] = input.value;\n      this.setState({\n        user: _user,\n        err: \"\"\n      });\n    };\n\n    this.validate = () => {\n      const emailReg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (!emailReg.test(this.state.user.email)) {\n        this.setState({\n          err: \"invalid email\"\n        });\n        return false;\n      }\n\n      if (this.state.user.pwd === \"\") {\n        this.setState({\n          err: \"No password entered\"\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.submitBtnClicked = () => {\n      if (this.validate()) {\n        fetch(config.BASE_API + \"/signIn\", {\n          method: \"POST\",\n          body: JSON.stringify(this.state.user),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          return response.json();\n        }).then(respJSON => {\n          console.log(respJSON);\n\n          if (respJSON.msg) {}\n\n          this.setState({\n            isUserLoggedIn: true\n          });\n        });\n      }\n    };\n\n    this.state = {\n      isUserLoggedIn: false,\n      user: {\n        email: \"\",\n        pwd: \"\"\n      },\n      err: \"ds\"\n    };\n  }\n\n  componentDidMount() {\n    const isLogged = localStorage.getItem(\"loggedIn\") ? true : false;\n    this.setState({\n      isUserLoggedIn: isLogged\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.isUserLoggedIn ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"score board\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Sign in/ Sign up\"), React.createElement(\"form\", {\n      className: \"text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(\"input\", {\n      name: \"email\",\n      onChange: this.handleChange,\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      name: \"pwd\",\n      onChange: this.handleChange,\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.err), React.createElement(\"span\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.submitBtnClicked(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default UserPortal;","map":{"version":3,"sources":["/Users/thapasya/home/practice/testing/snake-game-react/frontend/src/components/UserPortal.js"],"names":["React","Component","config","UserPortal","constructor","props","handleChange","e","input","target","_user","state","user","name","value","setState","err","validate","emailReg","test","email","pwd","submitBtnClicked","fetch","BASE_API","method","body","JSON","stringify","headers","then","response","json","respJSON","console","log","msg","isUserLoggedIn","componentDidMount","isLogged","localStorage","getItem","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport * as config from '../settings'\nclass UserPortal extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isUserLoggedIn: false,\n            user: {\n                email: \"\",\n                pwd: \"\"\n            },\n            err: \"ds\"\n        }\n    }\n    componentDidMount() {\n        const isLogged = localStorage.getItem(\"loggedIn\") ? true : false;\n        this.setState({\n            isUserLoggedIn: isLogged\n        })\n    }\n    handleChange = (e) => {\n        const input = e.target;\n        let _user = this.state.user;\n        _user[input.name] = input.value;\n        this.setState({\n            user: _user,\n            err: \"\"\n        })\n    }\n    validate = () => {\n        const emailReg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!emailReg.test(this.state.user.email)) {\n            this.setState({ err: \"invalid email\" })\n            return false\n        }\n        if (this.state.user.pwd === \"\") {\n            this.setState({ err: \"No password entered\" })\n            return false\n        }\n        return true;\n    }\n    submitBtnClicked = () => {\n        if (this.validate()) {\n            fetch(config.BASE_API + \"/signIn\",\n                {\n                    method: \"POST\",\n                    body: JSON.stringify(this.state.user),\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                }).then(response => {\n                    return response.json()\n                }).then(respJSON => {\n                    console.log(respJSON)\n                    if (respJSON.msg) {\n\n                    }\n                    this.setState({\n                        isUserLoggedIn: true\n                    })\n                })\n        }\n    }\n    render() {\n        return (\n            <div className=\"col-4\">\n                {this.state.isUserLoggedIn ?\n                    <div>score board</div> :\n                    <div>\n                        <header>Sign in/ Sign up</header>\n                        <form className=\"text-left\">\n                            <div className=\"form-group\">\n                                <label>Email address</label>\n                                <input name=\"email\" onChange={this.handleChange} type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input name=\"pwd\" onChange={this.handleChange} type=\"password\" className=\"form-control\" placeholder=\"Password\" />\n                            </div>\n                            <div className=\"invalid-feedback\">\n                                {this.state.err}\n                            </div>\n                            <span className=\"btn btn-primary\" onClick={() => this.submitBtnClicked()}>Submit</span>\n                        </form>\n                    </div>\n                }\n            </div>\n\n\n\n        );\n    }\n}\nexport default UserPortal;\n"]},"metadata":{},"sourceType":"module"}