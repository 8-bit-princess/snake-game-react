{"ast":null,"code":"var _jsxFileName = \"/Users/thapasya/home/practice/testing/snake-game-react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.directionKeyPressed = e => {\n      const key = this.state.key;\n      let _nextDirection = {};\n      const keyPressed = e.keyCode;\n\n      switch (keyPressed) {\n        case key.left:\n          _nextDirection = {\n            x: -10,\n            y: 0\n          };\n\n          if (this.isNextStepAllowed(_nextDirection)) {\n            this.setState({\n              currentDirection: _nextDirection\n            });\n          }\n\n          break;\n\n        case key.up:\n          _nextDirection = {\n            x: 0,\n            y: -10\n          };\n\n          if (this.isNextStepAllowed(_nextDirection)) {\n            this.setState({\n              currentDirection: _nextDirection\n            });\n          }\n\n          break;\n\n        case key.right:\n          _nextDirection = {\n            x: 10,\n            y: 0\n          };\n\n          if (this.isNextStepAllowed(_nextDirection)) {\n            this.setState({\n              currentDirection: _nextDirection\n            });\n          }\n\n          break;\n\n        case key.down:\n          _nextDirection = {\n            x: 0,\n            y: 10\n          };\n\n          if (this.isNextStepAllowed(_nextDirection)) {\n            this.setState({\n              currentDirection: _nextDirection\n            });\n          }\n\n          break;\n      }\n    };\n\n    this.state = {\n      canvasWidth: 300,\n      canvasHeight: 300,\n      key: {\n        left: 37,\n        up: 38,\n        right: 39,\n        down: 40\n      },\n      snake: [{\n        x: 150,\n        y: 150\n      }, {\n        x: 140,\n        y: 150\n      }, {\n        x: 130,\n        y: 150\n      }, {\n        x: 120,\n        y: 150\n      }],\n      currentDirection: {\n        x: -10,\n        y: 0\n      },\n      frogPosition: {\n        x: 0,\n        y: 0\n      },\n      score: 0\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.directionKeyPressed);\n    this.createFrog();\n    this.movingSlow();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.directionKeyPressed);\n  }\n\n  isNextStepAllowed(_nextDirection) {\n    const previousDirection = this.state.currentDirection;\n\n    if (Math.abs(previousDirection.x) === Math.abs(_nextDirection.x)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  movingSlow() {\n    const currentDirection = this.state.currentDirection;\n    setTimeout(() => {\n      this.clearCanvas();\n      this.drawFrog();\n\n      if (!this.didSnakeDie()) {\n        this.moveSnake(currentDirection);\n        this.drawSnake();\n        this.movingSlow();\n      } else {\n        this.drawSnake();\n\n        if (window.confirm(\"You lost with \" + this.state.score + \" point(s). Click ok to continue.\")) {\n          window.location.reload();\n        }\n      }\n    }, 300);\n  }\n\n  drawSnake() {\n    const snake = this.state.snake;\n    snake.forEach(this.drawSnakePart);\n    this.drawBoard();\n  }\n\n  clearCanvas() {\n    const canvas = document.getElementById(\"snake_board\"),\n          _this$state = this.state,\n          canvasWidth = _this$state.canvasWidth,\n          canvasHeight = _this$state.canvasHeight;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"white\";\n    ctx.strokeStyle = \"black\";\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n    ctx.strokeRect(0, 0, canvasWidth, canvasHeight);\n  }\n\n  didSnakeDie() {\n    const _this$state2 = this.state,\n          snake = _this$state2.snake,\n          canvasHeight = _this$state2.canvasHeight,\n          canvasWidth = _this$state2.canvasWidth,\n          head = {\n      x: snake[0].x,\n      y: snake[0].y\n    };\n    snake.forEach(function checkIfSnakeBite(part) {\n      if (part.x === head.x && part.y === head.y) {\n        return true;\n      }\n    });\n\n    if (head.x === 0 || head.x === canvasWidth - 10 || head.y === 0 || head.y === canvasHeight - 10) {\n      return true;\n    }\n\n    return false;\n  }\n\n  moveSnake(headTo) {\n    const _this$state3 = this.state,\n          snake = _this$state3.snake,\n          frogPosition = _this$state3.frogPosition;\n    const head = {\n      x: snake[0].x + headTo.x,\n      y: snake[0].y + headTo.y\n    };\n    snake.unshift(head);\n\n    if (head.x === frogPosition.x && head.y === frogPosition.y) {\n      this.gainPoint();\n      this.createFrog();\n    } else snake.pop();\n  }\n\n  gainPoint() {\n    this.setState({\n      score: this.state.score + 1\n    });\n  }\n\n  createFrog() {\n    const _this$state4 = this.state,\n          frogPosition = _this$state4.frogPosition,\n          snake = _this$state4.snake,\n          canvasWidth = _this$state4.canvasWidth,\n          canvasHeight = _this$state4.canvasHeight;\n    frogPosition.x = Math.round(Math.random() * (canvasWidth - 10) / 10) * 10;\n    frogPosition.y = Math.round(Math.random() * (canvasHeight - 10) / 10) * 10;\n    snake.forEach(function didSnakeEatFood(part) {\n      const isFrogEaten = part.x === frogPosition.x && part.y === frogPosition.y;\n\n      if (isFrogEaten) {\n        console.log(\"ate\");\n        this.createFrog();\n      }\n    });\n    this.drawFrog();\n    this.drawBoard();\n  }\n\n  drawFrog() {\n    const frogPosition = this.state.frogPosition;\n    const canvas = document.getElementById(\"snake_board\");\n\n    if (canvas.getContext) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillStyle = 'green';\n      ctx.fillRect(frogPosition.x, frogPosition.y, 10, 10);\n      ctx.strokeRect(frogPosition.x, frogPosition.y, 10, 10);\n    }\n  }\n\n  drawBoard() {\n    const canvas = document.getElementById(\"snake_board\"),\n          _this$state5 = this.state,\n          canvasWidth = _this$state5.canvasWidth,\n          canvasHeight = _this$state5.canvasHeight,\n          p = 0;\n    const context = canvas.getContext(\"2d\");\n\n    for (var x = 0; x <= canvasWidth; x += 10) {\n      context.moveTo(0.5 + x + p, p);\n      context.lineTo(0.5 + x + p, canvasHeight + p);\n    }\n\n    for (var x = 0; x <= canvasHeight; x += 10) {\n      context.moveTo(p, 0.5 + x + p);\n      context.lineTo(canvasWidth + p, 0.5 + x + p);\n    }\n\n    context.strokeStyle = \"grey\";\n    context.stroke();\n  }\n\n  drawSnakePart(snakePart) {\n    const canvas = document.getElementById(\"snake_board\");\n\n    if (canvas.getContext) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillStyle = 'red';\n      ctx.fillRect(snakePart.x, snakePart.y, 10, 10);\n      ctx.strokeRect(snakePart.x, snakePart.y, 10, 10);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Snake game\"), React.createElement(\"canvas\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      id: \"snake_board\",\n      width: \"300\",\n      height: \"300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"aside\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Score: \", this.state.score));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/thapasya/home/practice/testing/snake-game-react/src/App.js"],"names":["React","Component","App","constructor","props","directionKeyPressed","e","key","state","_nextDirection","keyPressed","keyCode","left","x","y","isNextStepAllowed","setState","currentDirection","up","right","down","canvasWidth","canvasHeight","snake","frogPosition","score","componentDidMount","document","addEventListener","createFrog","movingSlow","componentWillUnmount","removeEventListener","previousDirection","Math","abs","setTimeout","clearCanvas","drawFrog","didSnakeDie","moveSnake","drawSnake","window","confirm","location","reload","forEach","drawSnakePart","drawBoard","canvas","getElementById","ctx","getContext","fillStyle","strokeStyle","fillRect","strokeRect","head","checkIfSnakeBite","part","headTo","unshift","gainPoint","pop","round","random","didSnakeEatFood","isFrogEaten","console","log","p","context","moveTo","lineTo","stroke","snakePart","render","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      canvasWidth: 300,\n      canvasHeight: 300,\n      key: {\n        left: 37,\n        up: 38,\n        right: 39,\n        down: 40\n      },\n      snake: [\n        { x: 150, y: 150 },\n        { x: 140, y: 150 },\n        { x: 130, y: 150 },\n        { x: 120, y: 150 }\n      ],\n      currentDirection: {\n        x: -10,\n        y: 0\n      },\n      frogPosition: {\n        x: 0,\n        y: 0\n      },\n      score: 0\n    }\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.directionKeyPressed)\n    this.createFrog();\n    this.movingSlow();\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.directionKeyPressed)\n  }\n  isNextStepAllowed(_nextDirection) {\n    const previousDirection = this.state.currentDirection\n    if (Math.abs(previousDirection.x) === Math.abs(_nextDirection.x)) {\n      return false\n    }\n    return true\n  }\n  directionKeyPressed = (e) => {\n    const { key } = this.state\n    let _nextDirection = {}\n    const keyPressed = e.keyCode\n    switch (keyPressed) {\n      case key.left:\n        _nextDirection = { x: -10, y: 0 }\n        if (this.isNextStepAllowed(_nextDirection)) {\n          this.setState({ currentDirection: _nextDirection })\n        }\n        break;\n      case key.up:\n        _nextDirection = { x: 0, y: -10 }\n        if (this.isNextStepAllowed(_nextDirection)) {\n          this.setState({ currentDirection: _nextDirection })\n        }\n        break;\n      case key.right:\n        _nextDirection = { x: 10, y: 0 }\n        if (this.isNextStepAllowed(_nextDirection)) {\n          this.setState({ currentDirection: _nextDirection })\n        }\n        break;\n      case key.down:\n        _nextDirection = { x: 0, y: 10 }\n        if (this.isNextStepAllowed(_nextDirection)) {\n          this.setState({ currentDirection: _nextDirection })\n        }\n        break;\n    }\n  }\n  movingSlow() {\n    const { currentDirection } = this.state;\n    setTimeout(() => {\n      this.clearCanvas();\n      this.drawFrog();\n      if (!this.didSnakeDie()) {\n        this.moveSnake(currentDirection);\n        this.drawSnake();\n        this.movingSlow()\n      } else {\n        this.drawSnake();\n        if (window.confirm(\"You lost with \" + this.state.score + \" point(s). Click ok to continue.\")) {\n          window.location.reload()\n        }\n      }\n\n    }, 300);\n  }\n  drawSnake() {\n    const { snake } = this.state\n    snake.forEach(this.drawSnakePart);\n    this.drawBoard();\n  }\n  clearCanvas() {\n    const canvas = document.getElementById(\"snake_board\"), { canvasWidth, canvasHeight } = this.state\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"white\";\n    ctx.strokeStyle = \"black\";\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n    ctx.strokeRect(0, 0, canvasWidth, canvasHeight);\n  }\n  didSnakeDie() {\n    const { snake, canvasHeight, canvasWidth } = this.state, head = { x: snake[0].x, y: snake[0].y }\n    snake.forEach(function checkIfSnakeBite(part) {\n      if (part.x === head.x && part.y === head.y) {\n        return true\n      }\n    })\n    if (head.x === 0 || head.x === canvasWidth - 10\n      || head.y === 0 || head.y === canvasHeight - 10) {\n      return true\n    }\n    return false\n  }\n  moveSnake(headTo) {\n    const { snake, frogPosition } = this.state;\n    const head = {\n      x: snake[0].x + headTo.x,\n      y: snake[0].y + headTo.y\n    }\n    snake.unshift(head);\n    if (head.x === frogPosition.x && head.y === frogPosition.y) {\n      this.gainPoint()\n      this.createFrog();\n    }\n    else\n      snake.pop();\n  }\n  gainPoint() {\n    this.setState({\n      score: this.state.score + 1\n    })\n  }\n  createFrog() {\n\n    const { frogPosition, snake, canvasWidth, canvasHeight } = this.state\n\n    frogPosition.x = Math.round((Math.random() * (canvasWidth - 10)) / 10) * 10;\n    frogPosition.y = Math.round((Math.random() * (canvasHeight - 10)) / 10) * 10;\n\n    snake.forEach(function didSnakeEatFood(part) {\n      const isFrogEaten = part.x === frogPosition.x && part.y ===\n        frogPosition.y\n      if (isFrogEaten) {\n        console.log(\"ate\")\n        this.createFrog();\n      }\n    })\n    this.drawFrog();\n    this.drawBoard();\n  }\n  drawFrog() {\n    const { frogPosition } = this.state;\n    const canvas = document.getElementById(\"snake_board\")\n    if (canvas.getContext) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillStyle = 'green'\n      ctx.fillRect(frogPosition.x, frogPosition.y, 10, 10)\n      ctx.strokeRect(frogPosition.x, frogPosition.y, 10, 10)\n    }\n\n  }\n  drawBoard() {\n    const canvas = document.getElementById(\"snake_board\"),\n      { canvasWidth, canvasHeight } = this.state,\n      p = 0\n\n    const context = canvas.getContext(\"2d\");\n    for (var x = 0; x <= canvasWidth; x += 10) {\n      context.moveTo(0.5 + x + p, p);\n      context.lineTo(0.5 + x + p, canvasHeight + p);\n    }\n\n    for (var x = 0; x <= canvasHeight; x += 10) {\n      context.moveTo(p, 0.5 + x + p);\n      context.lineTo(canvasWidth + p, 0.5 + x + p);\n    }\n    context.strokeStyle = \"grey\";\n    context.stroke();\n  }\n\n  drawSnakePart(snakePart) {\n    const canvas = document.getElementById(\"snake_board\")\n    if (canvas.getContext) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillStyle = 'red'\n      ctx.fillRect(snakePart.x, snakePart.y, 10, 10)\n      ctx.strokeRect(snakePart.x, snakePart.y, 10, 10)\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"\">\n          Snake game\n        </header>\n        <canvas\n          style={{ border: \"1px solid black\" }}\n          id=\"snake_board\" width=\"300\" height=\"300\">\n        </canvas>\n        <aside>Score: {this.state.score}</aside>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}