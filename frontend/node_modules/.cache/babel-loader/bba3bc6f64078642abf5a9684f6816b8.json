{"ast":null,"code":"var _jsxFileName = \"/Users/thapasya/home/practice/testing/snake-game-react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.directionKeyPressed = e => {\n      alert(\"pressed\");\n      const key = this.state.key;\n      const keyPressed = e.keyCode;\n\n      switch (keyPressed) {\n        case key.left:\n          this.movingSlow({\n            x: -10,\n            y: 0\n          });\n          break;\n\n        case key.up:\n          this.movingSlow({\n            x: 0,\n            y: -10\n          });\n          break;\n\n        case key.right:\n          this.movingSlow({\n            x: 10,\n            y: 0\n          });\n          break;\n\n        case key.down:\n          this.movingSlow({\n            x: 0,\n            y: 10\n          });\n          break;\n        // default:\n        //   this.movingSlow({ x: 0, y: 0 })\n        //   break;\n      }\n    };\n\n    this.state = {\n      key: {\n        left: 37,\n        up: 38,\n        right: 39,\n        down: 40\n      },\n      snake: [{\n        x: 150,\n        y: 150\n      }, {\n        x: 140,\n        y: 150\n      }, {\n        x: 130,\n        y: 150\n      }, {\n        x: 120,\n        y: 150\n      }]\n    };\n  }\n\n  componentDidMount() {\n    const snake = this.state.snake; // snake.forEach(this.drawSnake);\n\n    this.movingSlow({\n      x: -10,\n      y: 0\n    });\n  }\n\n  movingSlow(nextPosition) {\n    const snake = this.state.snake;\n    setTimeout(() => {\n      this.clearCanvas();\n      this.moveSnake(nextPosition);\n      snake.forEach(this.drawSnake);\n      this.movingSlow(nextPosition);\n    }, 1000);\n  }\n\n  clearCanvas() {\n    const canvas = document.getElementById(\"snake_board\");\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"white\";\n    ctx.strokeStyle = \"black\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.strokeRect(0, 0, canvas.width, canvas.height);\n  }\n\n  moveSnake(headTo) {\n    const snake = this.state.snake;\n    const head = {\n      x: snake[0].x + headTo.x,\n      y: snake[0].y + headTo.y\n    };\n    snake.unshift(head);\n    snake.pop(); // this.setState({\n    //   snake: snake\n    // })\n  }\n\n  drawSnake(snakePart) {\n    const canvas = document.getElementById(\"snake_board\");\n\n    if (canvas.getContext) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillStyle = 'red';\n      ctx.fillRect(snakePart.x, snakePart.y, 10, 10);\n      ctx.strokeRect(snakePart.x, snakePart.y, 10, 10);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      onKeyDown: () => this.directionKeyPressed(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Snake game\"), React.createElement(\"canvas\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      id: \"snake_board\",\n      width: \"300\",\n      height: \"300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"current stock price: $3.15 + 0.15\"), React.createElement(\"aside\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Score: 0\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/thapasya/home/practice/testing/snake-game-react/src/App.js"],"names":["React","Component","App","constructor","props","directionKeyPressed","e","alert","key","state","keyPressed","keyCode","left","movingSlow","x","y","up","right","down","snake","componentDidMount","nextPosition","setTimeout","clearCanvas","moveSnake","forEach","drawSnake","canvas","document","getElementById","ctx","getContext","fillStyle","strokeStyle","fillRect","width","height","strokeRect","headTo","head","unshift","pop","snakePart","render","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      key: {\n        left: 37,\n        up: 38,\n        right: 39,\n        down: 40\n      },\n      snake: [\n        { x: 150, y: 150 },\n        { x: 140, y: 150 },\n        { x: 130, y: 150 },\n        { x: 120, y: 150 }\n      ]\n    }\n  }\n  componentDidMount() {\n    const { snake } = this.state;\n    // snake.forEach(this.drawSnake);\n    this.movingSlow({ x: -10, y: 0 });\n  }\n  directionKeyPressed = (e) => {\n    alert(\"pressed\")\n    const { key } = this.state\n    const keyPressed = e.keyCode\n    switch (keyPressed) {\n      case key.left:\n        this.movingSlow({ x: -10, y: 0 })\n        break;\n      case key.up:\n        this.movingSlow({ x: 0, y: -10 })\n        break;\n      case key.right:\n        this.movingSlow({ x: 10, y: 0 })\n        break;\n      case key.down:\n        this.movingSlow({ x: 0, y: 10 })\n        break;\n      // default:\n      //   this.movingSlow({ x: 0, y: 0 })\n      //   break;\n    }\n  }\n  movingSlow(nextPosition) {\n    const { snake } = this.state;\n    setTimeout(() => {\n      this.clearCanvas()\n      this.moveSnake(nextPosition);\n      snake.forEach(this.drawSnake);\n      this.movingSlow(nextPosition)\n    }, 1000);\n  }\n  clearCanvas() {\n    const canvas = document.getElementById(\"snake_board\")\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"white\";\n    ctx.strokeStyle = \"black\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.strokeRect(0, 0, canvas.width, canvas.height);\n  }\n  moveSnake(headTo) {\n    const { snake } = this.state;\n    const head = {\n      x: snake[0].x + headTo.x,\n      y: snake[0].y + headTo.y\n    }\n    snake.unshift(head);\n    snake.pop();\n    // this.setState({\n    //   snake: snake\n    // })\n  }\n  drawSnake(snakePart) {\n    const canvas = document.getElementById(\"snake_board\")\n    if (canvas.getContext) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillStyle = 'red'\n      ctx.fillRect(snakePart.x, snakePart.y, 10, 10)\n      ctx.strokeRect(snakePart.x, snakePart.y, 10, 10)\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\" onKeyDown={() => this.directionKeyPressed()}>\n        <header className=\"\">\n          Snake game\n      </header>\n        <canvas\n          style={{ border: \"1px solid black\" }}\n          id=\"snake_board\" width=\"300\" height=\"300\">\n          current stock price: $3.15 + 0.15\n      </canvas>\n        <aside>Score: 0</aside>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}