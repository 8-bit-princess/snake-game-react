{"ast":null,"code":"var _jsxFileName = \"/Users/thapasya/home/practice/testing/snake-game-react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.directionKeyPressed = e => {\n      const key = this.state.key;\n      let _nextPosition = {};\n      const keyPressed = e.keyCode;\n\n      switch (keyPressed) {\n        case key.left:\n          _nextPosition = {\n            x: -10,\n            y: 0\n          };\n\n          if (isNextStepAllowed(_nextDirection)) {\n            this.setState({\n              currentDirection: _nextPosition\n            });\n          }\n\n          break;\n\n        case key.up:\n          _nextPosition = {\n            x: 0,\n            y: -10\n          };\n          this.setState({\n            currentDirection: _nextPosition\n          });\n          break;\n\n        case key.right:\n          _nextPosition = {\n            x: 10,\n            y: 0\n          };\n          this.setState({\n            currentDirection: _nextPosition\n          });\n          break;\n\n        case key.down:\n          _nextPosition = {\n            x: 0,\n            y: 10\n          };\n          this.setState({\n            currentDirection: _nextPosition\n          });\n          break;\n      }\n    };\n\n    this.state = {\n      key: {\n        left: 37,\n        up: 38,\n        right: 39,\n        down: 40\n      },\n      snake: [{\n        x: 150,\n        y: 150\n      }, {\n        x: 140,\n        y: 150\n      }, {\n        x: 130,\n        y: 150\n      }, {\n        x: 120,\n        y: 150\n      }],\n      currentDirection: {\n        x: -10,\n        y: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.directionKeyPressed);\n    this.movingSlow();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.directionKeyPressed);\n  }\n\n  isNextStepAllowed(_nextDirection) {\n    const previousDirection = this.state.currentDirection;\n\n    if (Math.abs(previousDirection.x) === Math.abs(_nextDirection.x)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  movingSlow() {\n    const _this$state = this.state,\n          snake = _this$state.snake,\n          currentDirection = _this$state.currentDirection;\n    setTimeout(() => {\n      this.clearCanvas();\n      this.moveSnake(currentDirection);\n      snake.forEach(this.drawSnake);\n      this.movingSlow();\n    }, 1000);\n  }\n\n  clearCanvas() {\n    const canvas = document.getElementById(\"snake_board\");\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"white\";\n    ctx.strokeStyle = \"black\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.strokeRect(0, 0, canvas.width, canvas.height);\n  }\n\n  moveSnake(headTo) {\n    const snake = this.state.snake;\n    const head = {\n      x: snake[0].x + headTo.x,\n      y: snake[0].y + headTo.y\n    };\n    snake.unshift(head);\n    snake.pop(); // this.setState({\n    //   snake: snake\n    // })\n  }\n\n  drawSnake(snakePart) {\n    const canvas = document.getElementById(\"snake_board\");\n\n    if (canvas.getContext) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillStyle = 'red';\n      ctx.fillRect(snakePart.x, snakePart.y, 10, 10);\n      ctx.strokeRect(snakePart.x, snakePart.y, 10, 10);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Snake game\"), React.createElement(\"canvas\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      id: \"snake_board\",\n      width: \"300\",\n      height: \"300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"aside\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Score: 0\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/thapasya/home/practice/testing/snake-game-react/src/App.js"],"names":["React","Component","App","constructor","props","directionKeyPressed","e","key","state","_nextPosition","keyPressed","keyCode","left","x","y","isNextStepAllowed","_nextDirection","setState","currentDirection","up","right","down","snake","componentDidMount","document","addEventListener","movingSlow","componentWillUnmount","removeEventListener","previousDirection","Math","abs","setTimeout","clearCanvas","moveSnake","forEach","drawSnake","canvas","getElementById","ctx","getContext","fillStyle","strokeStyle","fillRect","width","height","strokeRect","headTo","head","unshift","pop","snakePart","render","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      key: {\n        left: 37,\n        up: 38,\n        right: 39,\n        down: 40\n      },\n      snake: [\n        { x: 150, y: 150 },\n        { x: 140, y: 150 },\n        { x: 130, y: 150 },\n        { x: 120, y: 150 }\n      ],\n      currentDirection: {\n        x: -10,\n        y: 0\n      }\n    }\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.directionKeyPressed)\n    this.movingSlow();\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.directionKeyPressed)\n  }\n  isNextStepAllowed(_nextDirection) {\n    const previousDirection = this.state.currentDirection\n    if (Math.abs(previousDirection.x) === Math.abs(_nextDirection.x)) {\n      return false\n    }\n    return true\n  }\n  directionKeyPressed = (e) => {\n    const { key } = this.state\n    let _nextPosition = {}\n    const keyPressed = e.keyCode\n    switch (keyPressed) {\n      case key.left:\n        _nextPosition = { x: -10, y: 0 }\n        if (isNextStepAllowed(_nextDirection)) {\n          this.setState({ currentDirection: _nextPosition })\n        }\n\n        break;\n      case key.up:\n        _nextPosition = { x: 0, y: -10 }\n        this.setState({ currentDirection: _nextPosition })\n        break;\n      case key.right:\n        _nextPosition = { x: 10, y: 0 }\n        this.setState({ currentDirection: _nextPosition })\n        break;\n      case key.down:\n        _nextPosition = { x: 0, y: 10 }\n        this.setState({ currentDirection: _nextPosition })\n        break;\n    }\n  }\n  movingSlow() {\n    const { snake, currentDirection } = this.state;\n    setTimeout(() => {\n      this.clearCanvas()\n      this.moveSnake(currentDirection);\n      snake.forEach(this.drawSnake);\n      this.movingSlow()\n    }, 1000);\n  }\n  clearCanvas() {\n    const canvas = document.getElementById(\"snake_board\")\n    const ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"white\";\n    ctx.strokeStyle = \"black\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.strokeRect(0, 0, canvas.width, canvas.height);\n  }\n  moveSnake(headTo) {\n    const { snake } = this.state;\n    const head = {\n      x: snake[0].x + headTo.x,\n      y: snake[0].y + headTo.y\n    }\n    snake.unshift(head);\n    snake.pop();\n    // this.setState({\n    //   snake: snake\n    // })\n  }\n  drawSnake(snakePart) {\n    const canvas = document.getElementById(\"snake_board\")\n    if (canvas.getContext) {\n      const ctx = canvas.getContext(\"2d\");\n      ctx.fillStyle = 'red'\n      ctx.fillRect(snakePart.x, snakePart.y, 10, 10)\n      ctx.strokeRect(snakePart.x, snakePart.y, 10, 10)\n    }\n  }\n  render() {\n\n    return (\n      <div className=\"App\">\n        <header className=\"\">\n          Snake game\n        </header>\n        <canvas\n          style={{ border: \"1px solid black\" }}\n          id=\"snake_board\" width=\"300\" height=\"300\">\n        </canvas>\n        <aside>Score: 0</aside>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}